name: CI_yamdb

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2


    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        # обновление pip
        python -m pip install --upgrade pip
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return
        # установка зависимостей
        pip install -r requirements.txt

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
    - name: Test with  django tests
      run: |
        python -m pytest
    - name: coverage.py badge
      uses: tj-actions/coverage-badge-py@v1.6
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v6
      id: changed_files
      with:
        files: coverage.svg
    - name: Commit files
      if: steps.changed_files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add coverage.svg
        git commit -m "Updated coverage.svg"
    - name: Push changes
      if: steps.changed_files.outputs.files_changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB1_TOKEN }}
        branch: ${{ github.ref }}



  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:

      - name: Login to docker.io
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_ID }} --password-stdin
      - uses: actions/checkout@master
      - name: Build django
        run: |
          docker build -t 1kovalevskiy/yamdb:latest -f Dockerfile .
      - name: Push django to docker.io
        run: docker push 1kovalevskiy/yamdb:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
        script: |
          git clone https://github.com/1kovalevskiy/yamdb.git
          cd /home/ubuntu/yamdb
          git pull
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker-compose rm 1kovalevskiy/yamdb:latest
          sudo docker pull 1kovalevskiy/yamdb:latest
          sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
